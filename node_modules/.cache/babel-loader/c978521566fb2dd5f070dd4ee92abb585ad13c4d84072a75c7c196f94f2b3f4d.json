{"ast":null,"code":"import service from './service';\nfunction adicionar(cliente) {\n  return new Promise((resolve, reject) => {\n    service.post('/clientes', cliente).then(response => resolve(response)).catch(erro => reject(erro));\n  });\n}\nfunction obter() {\n  return new Promise((resolve, reject) => {\n    service.get('/clientes').then(response => resolve(response)).catch(erro => reject(erro));\n  });\n}\nfunction atualizar(cliente) {\n  return new Promise((resolve, reject) => {\n    service.put(`/clientes/${cliente.id}`, cliente).then(response => resolve(response)).catch(erro => reject(erro));\n  });\n}\nfunction excluir(id) {\n  return new Promise((resolve, reject) => {\n    service.delete(`/clientes/${id}`).then(response => resolve(response)).catch(erro => reject(erro));\n  });\n}\nexport default {\n  adicionar,\n  obter,\n  atualizar,\n  excluir\n};","map":{"version":3,"names":["service","adicionar","cliente","Promise","resolve","reject","post","then","response","catch","erro","obter","get","atualizar","put","id","excluir","delete"],"sources":["C:/Users/la273/Documents/Projetos pro git/Cliente-Reactgit/Projeto-React/src/services/cliente-service.js"],"sourcesContent":["import service from './service';\r\n\r\nfunction adicionar(cliente){\r\n    return new Promise((resolve, reject) => {\r\n        service.post('/clientes', cliente)\r\n        .then(response => resolve(response))\r\n        .catch(erro => reject(erro))\r\n    });\r\n}\r\n\r\nfunction obter(){\r\n    return new Promise((resolve, reject) => {\r\n        service.get('/clientes')\r\n        .then(response => resolve(response))\r\n        .catch(erro => reject(erro))\r\n    });\r\n}\r\n\r\nfunction atualizar(cliente){\r\n    return new Promise((resolve, reject) => {\r\n        service.put(`/clientes/${cliente.id}`, cliente)\r\n        .then(response => resolve(response))\r\n        .catch(erro => reject(erro))\r\n    });\r\n}\r\n\r\nfunction excluir(id){\r\n    return new Promise((resolve, reject) => {\r\n        service.delete(`/clientes/${id}`)\r\n        .then(response => resolve(response))\r\n        .catch(erro => reject(erro))\r\n    });\r\n}\r\n\r\nexport default {\r\n    adicionar,\r\n    obter,\r\n    atualizar,\r\n    excluir\r\n}"],"mappings":"AAAA,OAAOA,OAAO,MAAM,WAAW;AAE/B,SAASC,SAASA,CAACC,OAAO,EAAC;EACvB,OAAO,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;IACpCL,OAAO,CAACM,IAAI,CAAC,WAAW,EAAEJ,OAAO,CAAC,CACjCK,IAAI,CAACC,QAAQ,IAAIJ,OAAO,CAACI,QAAQ,CAAC,CAAC,CACnCC,KAAK,CAACC,IAAI,IAAIL,MAAM,CAACK,IAAI,CAAC,CAAC;EAChC,CAAC,CAAC;AACN;AAEA,SAASC,KAAKA,CAAA,EAAE;EACZ,OAAO,IAAIR,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;IACpCL,OAAO,CAACY,GAAG,CAAC,WAAW,CAAC,CACvBL,IAAI,CAACC,QAAQ,IAAIJ,OAAO,CAACI,QAAQ,CAAC,CAAC,CACnCC,KAAK,CAACC,IAAI,IAAIL,MAAM,CAACK,IAAI,CAAC,CAAC;EAChC,CAAC,CAAC;AACN;AAEA,SAASG,SAASA,CAACX,OAAO,EAAC;EACvB,OAAO,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;IACpCL,OAAO,CAACc,GAAG,CAAE,aAAYZ,OAAO,CAACa,EAAG,EAAC,EAAEb,OAAO,CAAC,CAC9CK,IAAI,CAACC,QAAQ,IAAIJ,OAAO,CAACI,QAAQ,CAAC,CAAC,CACnCC,KAAK,CAACC,IAAI,IAAIL,MAAM,CAACK,IAAI,CAAC,CAAC;EAChC,CAAC,CAAC;AACN;AAEA,SAASM,OAAOA,CAACD,EAAE,EAAC;EAChB,OAAO,IAAIZ,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;IACpCL,OAAO,CAACiB,MAAM,CAAE,aAAYF,EAAG,EAAC,CAAC,CAChCR,IAAI,CAACC,QAAQ,IAAIJ,OAAO,CAACI,QAAQ,CAAC,CAAC,CACnCC,KAAK,CAACC,IAAI,IAAIL,MAAM,CAACK,IAAI,CAAC,CAAC;EAChC,CAAC,CAAC;AACN;AAEA,eAAe;EACXT,SAAS;EACTU,KAAK;EACLE,SAAS;EACTG;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}